<% poll = @poll || question.poll %>
<div class="poll-question-answers">
  <% if able_to_participate?(poll, question) %>
    <p class="question-votes-counter">
      <%= t(
        "poll_questions.show.#{votes_counter_key(question)}",
        count: poll_votes_counter(question)
      ) %>
    </p>

    <% question.question_answers.each do |answer| %>
      <div class="answer-votes">
        <% if @answers_by_question_id[question.id] &&
          @answers_by_question_id[question.id].include?(answer.title)
        %>
          <div>
            <%= link_to answer.title,
              destroy_answer_question_path(question, {
                answer: answer.title, token: token, poll_id: poll.id
              }),
              method: :delete,
              remote: true,
              title: t("poll_questions.show.destroy_vote", answer: answer.title),
              class: "button secondary hollow js-question-answer answered"
            %>
          </div>
        <% elsif question.reached_vote_limit?(current_user) %>
          <div>
            <span class="button secondary hollow disabled"
              title="<%= t(
                "poll_questions.show.vote_limit",
                count: question.votes_per_question)
              %>"
            >
              <%= answer.title %>
            </span>
          </div>
        <% else %>
          <div>
            <%= link_to answer.title,
              answer_question_path(question, answer: answer.title, token: token),
              method: :post,
              remote: true,
              title: t("poll_questions.show.vote_answer", answer: answer.title),
              class: "button secondary hollow js-question-answer" %>
          </div>
        <% end %>
        <div class="votes margin-bottom">
          <% votes = Poll::Answer.votes(question.id, answer.title) %>
          <p><%= t("polls.index.votes_counter", count: votes) %></p>
        </div>
      </div>
    <% end %>

  <% elsif !user_signed_in? %>
    <% question.question_answers.order(id: :desc).each do |answer| %>
      <%= link_to answer.title, new_user_session_path, class: "button secondary hollow" %>
    <% end %>
  <% elsif !current_user.level_two_or_three_verified? %>
    <% question.question_answers.order(id: :desc).each do |answer| %>
      <%= link_to answer.title, verification_path, class: "button secondary hollow" %>
    <% end %>
  <% else %>
    <% if poll.electoral_college_restricted? &&
      question.category.present? &&
      poll.belongs_to_electoral_college?(current_user)
    %>
      <p class="question-votes-counter">
        <%= t(
          "poll_questions.show.out_of_category",
          category: question.category.downcase
        ) %>
      </p>
    <% else %>
      <div class="margin-top"></div>
    <% end %>

    <% question.question_answers.order(id: :desc).each do |answer| %>
      <div class="answer-votes">
        <div>
          <% if @answers_by_question_id[question.id] &&
              @answers_by_question_id[question.id].include?(answer.title)
          %>
            <span class="button secondary hollow answered">
              <%= answer.title %>
            </span>
          <% else %>
            <span class="button secondary hollow disabled">
              <%= answer.title %>
            </span>
          <% end %>
        </div>

        <div class="votes margin-bottom">
          <% votes = Poll::Answer.votes(question.id, answer.title) %>
          <p><%= t("polls.index.votes_counter", count: votes) %></p>
        </div>
      </div>
    <% end %>
  <% end %>
</div>
